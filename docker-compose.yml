services:
  reverse-proxy:
    image: traefik:v2.8
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=false
  mainsite:
    image: klakegg/hugo:0.101.0-alpine
    command: server -p 80
    volumes:
      - "./mainsite/src:/src"
    labels:
      - traefik.http.routers.mainsite.rule=Host(`5.161.100.104`)
      - traefik.http.services.mainsite.loadbalancer.server.port=80
  population-choropleth:
    build:
      context: ./population-choropleth
      dockerfile: ./Dockerfile
    image: "population-choropleth"
    labels:
      - traefik.http.routers.population-choropleth.rule=Host(`5.161.100.104`) && PathPrefix(`/app/population-choropleth`)
      - traefik.http.services.population-choropleth.loadbalancer.server.port=80
  frontend:
    build:
      context: ./trade-journal/client
      dockerfile: ./Dockerfile
    image: "trade-journal-client"
    labels:
      - traefik.http.routers.frontend.rule=Host(`5.161.100.104`) && PathPrefix(`/app/trade-journal`)
      - traefik.http.services.frontend.loadbalancer.server.port=80
    #ports:
    # nginx hosts React on internal port 80
    #- "3000:80"
    links:
      - "backend:be"
  backend:
    build:
      context: ./trade-journal/server
      dockerfile: ./Dockerfile
    image: "trade-journal-backend"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=db
      - DB_NAME=trade_journal
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=trader123
    links:
      - db
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=trader123
      - POSTGRES_DB=trade_journal
      # this env var is required for healthcheck
      - PGUSER=postgres
    healthcheck:
      # check if db is ready
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
      - ./trade-journal/db/db-init.sql:/docker-entrypoint-initdb.d/1-db-init.sql
volumes:
  db:
    driver: local
